{"version":3,"sources":["utils/loader.js","Components/Navigation/header.js","Components/Navigation/footer.js","hoc/dashboardLayout.js","Components/dashboard/productDashboard.js","Components/dashboard/index.js","hoc/authGuard.js","utils/tools.js","store/types.js","store/actions/index.js","store/actions/user_actions.js","Components/auth/authForm.js","hoc/preventSignInRoute.js","Components/auth/index.js","hoc/mainLayout.js","Components/customers/customerDashboard.js","Components/customers/searchbox.js","Components/customers/index.js","Components/dashboard/user/emailInfo.js","Components/dashboard/user/info.js","Components/customers/CustomerByID.js","Components/dashboard/admin/formValues.js","store/actions/pipeline.action.js","Components/dashboard/admin/add.js","Components/dashboard/admin/pipelineTable.js","Components/dashboard/admin/pipeline.layout.js","Components/dashboard/admin/edit.js","routes.js","store/reducers/users.reducer.js","store/reducers/index.js","store/reducers/notifications.reducer.js","store/reducers/pipeline.reducer.js","store/index.js","index.js"],"names":["Loader","full","className","CircularProgress","Header","users","signOutUser","auth","to","onClick","Footer","links","name","linkTo","admin","DashboardLayout","props","useSelector","state","generateLinks","data","map","item","i","role","title","children","ProductDashboard","productCode","productDescription","availableQty","Table","striped","bordered","hover","style","width","Dashboard","useState","loading","setLoading","products","setProducts","currentPage","setCurrentPage","searchField","useEffect","a","axios","get","headers","Accept","Base64","stringify","hmacSHA256","result","fetchList","variant","Items","filter","e","AvailableQty","sort","b","ProductCode","ProductDescription","previousLabel","onPageChange","selected","pageCount","Pagination","NumberOfPages","nextLabel","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","authGuard","ComposedComponent","isAuth","setIsAuth","history","push","showToast","type","msg","toast","success","position","POSITION","BOTTOM_RIGHT","error","errorHelper","formik","value","errors","touched","helperText","getTokenCookie","cookie","load","getAuthHeader","Authorization","GET_PIPE_PAGINATE","REMOVE_PIPELINE","ADD_PIPELINE","GET_PIPELINE_BY_ID","CLEAR_CURRENT_PIPELINE","AUTH_USER","ERROR_GLOBAL","SUCCESS_GLOBAL","CLEAR_NOTIFICATION","SIGN_OUT","UPDATE_USER_PROFILE","USER_CHANGE_EMAIL","userAuthenticate","user","payload","userChangeEmail","errorGlobal","successGlobal","clearNotification","dispatch","pipelineByPaginate","pipeline","pipelineAdd","getPipelineByID","defaults","post","AuthForm","notifications","useDispatch","useFormik","initialValues","email","password","validationSchema","Yup","required","onSubmit","values","handleSubmit","formType","actions","response","message","userRegister","console","log","userSignIn","TextField","label","getFieldProps","Button","color","size","PreventSignInRoute","RegisterLogin","setFormType","MainLayout","CustomerDashboard","customerCode","customerName","phoneNumber","id","SearchBox","placeholder","handleChange","onChange","Customers","customers","setCustomers","setSearchField","target","CustomerCode","CustomerName","PhoneNumber","Guid","EmailStepper","emailModal","setEmailModal","activeStep","setActiveStep","enableReinitialize","newemail","test","patch","closeModal","handleNext","prevActiveStep","handleBack","nextBtn","backBtn","maxWidth","marginBottom","marginTop","disabled","Modal","centered","show","onHide","closeButton","Title","Body","Stepper","index","Step","StepLabel","submitForm","UserInfo","firstName","lastName","min","max","getState","profile","userData","CustomerById","notes","setNotes","content","noteId","formData","setFormData","editNote","setEditNote","match","params","getAuthHeader2","fetchCustomer","fetchCustomerNotes","event","preventDefault","customerId","note","_id","updatedRes","updated","ContactFirstName","ContactLastName","MobileNumber","Email","Website","Addresses","AddressType","AddressName","StreetAddress","StreetAddress2","City","Country","PostalCode","handleEdit","height","formValues","customerContactInward","customerContactOutward","followUp1","followUp2","customerNotes","validation","args","AddPipeline","multiline","rows","Divider","PipelineTable","pipe","prev","next","gotoEdit","removeModal","handleClose","handleModal","handleRemove","goToPrevPage","page","goToNextPage","docs","date","hasPrevPage","Prev","prevPage","Item","active","hasNextPage","nextPage","Next","defaultValues","keywords","AdminPipeline","setRemoveModal","toRemove","setToRemove","useReducer","newState","searchValues","setSearchValues","gotoPage","handleCose","delete","removeArticle","byPaginate","EditPipeline","setValues","pipelineEdit","param","byId","getValuesToEdit","App","Error","remove","path","exact","component","DEFAULT_USER_STATE","verified","cart","appReducers","combineReducers","action","lastAdded","ReduxStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.73013588.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loader = ({full}) => (\r\n    <div className={`root_loader ${full ? 'full':''}`}>\r\n        <CircularProgress/>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ users, signOutUser }) => {\r\n  return (\r\n    <header className=\"bck_b_light\">\r\n      <div className=\"container\">\r\n        <div className=\"left\">\r\n          <div className=\"logo\">The Lj Group</div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"top\">\r\n            {users.auth ? (\r\n              <>\r\n                <Link to=\"/dashboard\">My account</Link>\r\n                <span onClick={() => signOutUser()}>Log out</span>\r\n              </>\r\n            ) : (\r\n              <Link to=\"/\">Log in</Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\r\nimport TimelapseIcon from \"@material-ui/icons/Timelapse\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\n//import { useSelector } from 'react-redux';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bck_b_dark\">\r\n      <div className=\"footerContainer\">\r\n        <div className=\"logo\">The LJ Group</div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"left\">\r\n            <h2>Contact information</h2>\r\n            <div className=\"business_nfo\">\r\n              <div className=\"tag\">\r\n                <ContactsIcon />\r\n                <div className=\"nfo\">\r\n                  <div>Address</div>\r\n                  <div>\r\n                    C2 Hurstwood Court\r\n                  </div>\r\n                  <div>\r\n                  Duttons Way Shadsworth Business Park\r\n                  </div>\r\n                  <div>Blackburn BB1 2QR</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tag\">\r\n                <TimelapseIcon />\r\n                <div className=\"nfo\">\r\n                  <div>Working hours</div>\r\n                  <div>Mon-Fri 9AM-5PM</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tag\">\r\n                <PhoneIcon />\r\n                <div className=\"nfo\">\r\n                  <div>Phone</div>\r\n                  <div>+44 (0)1254 665104</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"tag\">\r\n                <EmailIcon />\r\n                <div className=\"nfo\">\r\n                  <div>Email</div>\r\n                  <div>enquiries@theljgroup.co.uk</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const links = [\r\n  {\r\n    name: \"Products\",\r\n    linkTo: \"/dashboard\",\r\n  },\r\n  {\r\n    name: \"User information\",\r\n    linkTo: \"/dashboard/user/user_info\",\r\n  },\r\n];\r\n\r\nexport const admin = [\r\n  {\r\n    name: \"Customers\",\r\n    linkTo: \"/dashboard/admin/customers\",\r\n  },\r\n  {\r\n    name: \"Add Pipeline\",\r\n    linkTo: \"/dashboard/admin/admin_pipeline\",\r\n  },\r\n];\r\n\r\nconst DashboardLayout = (props) => {\r\n  const users = useSelector((state) => state.users);\r\n\r\n  const generateLinks = (data) =>\r\n    data.map((item, i) => (\r\n      <Link to={item.linkTo} key={`${item.name}${i}`}>\r\n        {item.name}\r\n      </Link>\r\n    ));\r\n\r\n  return (\r\n   <div className=\"container\">\r\n      <div className=\"user_container page_container\">\r\n        <div className=\"user_left_nav\">\r\n          <h2>My account</h2>\r\n          <div className=\"links\">{generateLinks(links)}</div>\r\n          {users.data.role === \"admin\" ? (\r\n            <div>\r\n              <h2>Admin</h2>\r\n              <div className=\"links\">{generateLinks(admin)}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"user_right\">\r\n          <div className=\"dashboard_title\">\r\n            <h1>{props.title}</h1>\r\n          </div>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst ProductDashboard = ({\r\n  productCode,\r\n  productDescription,\r\n  availableQty,\r\n}) => {\r\n  return (\r\n    <>\r\n    <div className=\"productDashboard\">\r\n      <Table striped bordered hover>\r\n        <tbody>\r\n          <tr>\r\n            <td style={{ width: \"25%\" }}>{productCode}</td>\r\n\r\n            <td style={{ width: \"50%\" }}> {productDescription}</td>\r\n            <td style={{ width: \"25%\" }}> {availableQty}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport DashboardLayout from \"../../hoc/dashboardLayout\";\r\nimport axios from \"axios\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport hmacSHA256 from \"crypto-js/hmac-sha256\";\r\nimport Base64 from \"crypto-js/enc-base64\";\r\nimport ProductDashboard from \"./productDashboard\";\r\n\r\nconst Dashboard = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n\r\n  const auth_id = \"f6500cfe-5991-422f-aa8d-fd18a814e47b\";\r\n  const auth_key =\r\n    \"VlVnsmU3Lq2yDcnSMGAtn6bhrJ4sowsG9BOn5yIFo5R0Lsy7jmGLw5YKcuTvWGwrFtHIBdHCUoc1ClWGsQ==\";\r\n  const handlePageClick = ({ selected }) => {\r\n    setCurrentPage(selected + 1);\r\n  };\r\n  useEffect(() => {\r\n    const getAuthHeader2 = () => {\r\n      const hmacSignature = Base64.stringify(\r\n        hmacSHA256(`pageSize=500`, auth_key)\r\n      );\r\n      return {\r\n        headers: {\r\n          //'Authorization':`Bearer ${getTokenCookie()}`,\r\n          \"content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"api-auth-id\": auth_id,\r\n          \"api-auth-signature\": hmacSignature,\r\n          \"client-type\": \"linzi\",\r\n        },\r\n      };\r\n    };\r\n    const fetchList = async () => {\r\n      const result = await axios.get(\r\n        `https://api.unleashedsoftware.com/StockOnHand/${currentPage}?pageSize=500`,\r\n        getAuthHeader2()\r\n      );\r\n\r\n      setProducts(result.data);\r\n \r\n      setLoading(false);\r\n    };\r\n    fetchList();\r\n  }, [currentPage, searchField]);\r\n  return (\r\n    <>\r\n      <DashboardLayout title=\"Overview\">\r\n      \r\n        <div>\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <div className=\"productTable\">\r\n              <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th style={{ width: \"25%\" }}>Code</th>\r\n\r\n                      <th style={{ width: \"50%\" }}>Product Description</th>\r\n                      <th style={{ width: \"25%\" }}>Available</th>\r\n                    </tr>\r\n                  </thead>\r\n                </Table>\r\n\r\n                {products.Items.filter((e) => e.AvailableQty >= 1).sort((a, b) => b.AvailableQty - a.AvailableQty).map((data, i) => {\r\n                  return (\r\n                    <div key={i}>\r\n                      <ProductDashboard\r\n                        productCode={data.ProductCode}\r\n                        productDescription={data.ProductDescription}\r\n                        availableQty={data.AvailableQty}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"paginationContainer\">\r\n                  <ReactPaginate\r\n                    previousLabel={\"Prev\"}\r\n                    onPageChange={handlePageClick}\r\n                    pageCount={products.Pagination.NumberOfPages}\r\n                    nextLabel={\"Next\"}\r\n                    containerClassName={\"paginationBttns\"}\r\n                    previousLinkClassName={\"previousBttns\"}\r\n                    nextLinkClassName={\"nextBttn\"}\r\n                    disabledClassName={\"paginationDisabled\"}\r\n                    activeClassName={\"paginationActive\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React,{ useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport Loader from '../utils/loader';\r\n\r\n\r\nexport default function authGuard(ComposedComponent){\r\n    const AuthenticationCheck = (props) => {\r\n        const [isAuth,setIsAuth] = useState(false);\r\n        const users  = useSelector( state => state.users );\r\n\r\n\r\n        useEffect(()=>{\r\n            if(!users.auth){\r\n                props.history.push('/')\r\n            }else{\r\n                setIsAuth(true);\r\n            }\r\n        },[props,users]);\r\n\r\n\r\n        if(!isAuth){\r\n            return(\r\n                <Loader full={true}/>\r\n            )\r\n        } else {\r\n            return(\r\n                <ComposedComponent users={users} {...props}/>\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    return AuthenticationCheck;\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport cookie from \"react-cookies\";\r\nimport hmacSHA256 from \"crypto-js/hmac-sha256\";\r\nimport Base64 from \"crypto-js/enc-base64\";\r\nexport const LinziJayButton = (props) => {\r\n  let template = \"\";\r\n\r\n  switch (props.type) {\r\n    case \"default\":\r\n      template = (\r\n        <Link\r\n          className={!props.altClass ? \"link_default\" : props.altClass}\r\n          to={props.linkTo}\r\n          style={{\r\n            ...props.style,\r\n          }}\r\n        >\r\n          {props.title}\r\n        </Link>\r\n      );\r\n      break;\r\n    default:\r\n      template = \"\";\r\n  }\r\n\r\n  return template;\r\n};\r\n\r\nexport const showToast = (type, msg) => {\r\n  switch (type) {\r\n    case \"SUCCESS\":\r\n      toast.success(msg, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      break;\r\n    case \"ERROR\":\r\n      toast.error(msg, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const errorHelper = (formik, value) => ({\r\n  error: formik.errors[value] && formik.touched[value] ? true : false,\r\n  helperText:\r\n    formik.errors[value] && formik.touched[value] ? formik.errors[value] : null,\r\n});\r\n\r\nexport const getTokenCookie = () => cookie.load(\"x-access-token\");\r\nexport const removeTokenCookie = () =>\r\n  cookie.remove(\"x-access-token\", { path: \"/\" });\r\nexport const getAuthHeader = () => {\r\n  return { headers: { Authorization: `Bearer ${getTokenCookie()}` } };\r\n};\r\n\r\nconst auth_id = \"f6500cfe-5991-422f-aa8d-fd18a814e47b\";\r\nconst auth_key =\r\n  \"VlVnsmU3Lq2yDcnSMGAtn6bhrJ4sowsG9BOn5yIFo5R0Lsy7jmGLw5YKcuTvWGwrFtHIBdHCUoc1ClWGsQ==\";\r\n\r\nexport const getAuthHeader2 = () => {\r\n  const hmacSignature = Base64.stringify(\r\n    hmacSHA256(\"pageSize=15&&customer=\", auth_key)\r\n  );\r\n  return {\r\n    headers: {\r\n      //'Authorization':`Bearer ${getTokenCookie()}`,\r\n      \"content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      \"api-auth-id\": auth_id,\r\n      \"api-auth-signature\": hmacSignature,\r\n      \"client-type\": \"linzi\",\r\n    },\r\n  };\r\n};\r\n","\r\n\r\n\r\nexport const GET_PIPE_PAGINATE = 'get_pipe_paginate';\r\nexport const REMOVE_PIPELINE = 'remove_pipeline';\r\nexport const ADD_PIPELINE = 'pipeline_add'\r\nexport const GET_PIPELINE_BY_ID='pipeline_by_id'\r\nexport const CLEAR_CURRENT_PIPELINE='clear_current_pipeline'\r\n\r\nexport const AUTH_USER = 'auth_user';\r\nexport const ERROR_GLOBAL = 'error_global';\r\nexport const SUCCESS_GLOBAL = 'success_global';\r\nexport const CLEAR_NOTIFICATION = 'clear_notification';\r\n\r\nexport const SIGN_OUT = 'sign_out';\r\nexport const UPDATE_USER_PROFILE = 'update_user_profile';\r\nexport const USER_CHANGE_EMAIL = 'user_change_email';\r\nexport const GET_CUSTOMER = 'get_customer';","import {\r\n  AUTH_USER,\r\n  ERROR_GLOBAL,\r\n  SUCCESS_GLOBAL,\r\n  CLEAR_NOTIFICATION,\r\n  SIGN_OUT,\r\n  UPDATE_USER_PROFILE,\r\n  USER_CHANGE_EMAIL,\r\n  GET_PIPE_PAGINATE,\r\n  REMOVE_PIPELINE,\r\n  ADD_PIPELINE,\r\n  GET_PIPELINE_BY_ID,\r\n  CLEAR_CURRENT_PIPELINE,\r\n} from \"../types\";\r\n\r\nexport const userAuthenticate = (user) => ({\r\n  type: AUTH_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const userSignOut = () => ({\r\n  type: SIGN_OUT,\r\n});\r\n\r\nexport const userUpdateProfile = (userdata) => ({\r\n  type: UPDATE_USER_PROFILE,\r\n  payload: userdata,\r\n});\r\n\r\nexport const userChangeEmail = (data) => ({\r\n  type: USER_CHANGE_EMAIL,\r\n  payload: data,\r\n});\r\n\r\nexport const errorGlobal = (msg) => ({\r\n  type: ERROR_GLOBAL,\r\n  payload: msg,\r\n});\r\n\r\nexport const successGlobal = (msg) => ({\r\n  type: SUCCESS_GLOBAL,\r\n  payload: msg,\r\n});\r\n\r\nexport const clearNotification = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_NOTIFICATION,\r\n    });\r\n  };\r\n};\r\n\r\nexport const pipelineByPaginate = (pipeline) => ({\r\n  type: GET_PIPE_PAGINATE,\r\n  payload: pipeline,\r\n});\r\n\r\nexport const productRemove = () => ({\r\n  type: REMOVE_PIPELINE,\r\n});\r\n\r\nexport const pipelineAdd = (pipeline) => ({\r\n  type: ADD_PIPELINE,\r\n  payload: pipeline,\r\n});\r\n\r\nexport const getPipelineByID = (pipeline) => ({\r\n  type: GET_PIPELINE_BY_ID,\r\n  payload: pipeline,\r\n});\r\n\r\nexport const clearCurrentPipeline = () => ({\r\n  type: CLEAR_CURRENT_PIPELINE,\r\n});\r\n","import * as actions from \"./index\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getAuthHeader,\r\n  removeTokenCookie,\r\n  getTokenCookie,\r\n} from \"../../utils/tools\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nexport const userRegister = (values) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await axios.post(`/apiapi/auth/register`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n      dispatch(actions.userAuthenticate({ data: user.data.user, auth: true }));\r\n      dispatch(\r\n        actions.successGlobal(\"Welcome !! check you mail to verify account.\")\r\n      );\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const userSignIn = (values) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await axios.post(`/apiapi/auth/signin`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n      console.log(user.data.user);\r\n      dispatch(actions.userAuthenticate({ data: user.data.user, auth: true }));\r\n      dispatch(actions.successGlobal(\"Welcome.\"));\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const userIsAuth = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      if (!getTokenCookie()) {\r\n        throw new Error();\r\n      }\r\n\r\n      const user = await axios.get(`/apiapi/auth/isauth`, getAuthHeader());\r\n\r\n      dispatch(actions.userAuthenticate({ data: user.data, auth: true }));\r\n    } catch (error) {\r\n      dispatch(actions.userAuthenticate({ data: {}, auth: false }));\r\n    }\r\n  };\r\n};\r\n\r\nexport const userSignOut = () => {\r\n  return async (dispatch) => {\r\n    removeTokenCookie();\r\n    dispatch(actions.userSignOut());\r\n    dispatch(actions.successGlobal(\"Good bye !!\"));\r\n  };\r\n};\r\n\r\nexport const userUpdateProfile = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const profile = await axios.patch(\r\n        `/apiapi/users/profile`,\r\n        {\r\n          data: data,\r\n        },\r\n        getAuthHeader()\r\n      );\r\n\r\n      const userData = {\r\n        ...getState().users.data,\r\n        firstName: profile.data.firstName,\r\n        lastName: profile.data.lastName,\r\n      };\r\n      dispatch(actions.userUpdateProfile(userData));\r\n      dispatch(actions.successGlobal(\"Profile updated !!\"));\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const userChangeEmail = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.patch(\r\n        `/apiapi/users/email`,\r\n        {\r\n          email: data.email,\r\n          newemail: data.newemail,\r\n        },\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(actions.userChangeEmail(data.newemail));\r\n      dispatch(\r\n        actions.successGlobal(\"Good job, Remember to verify your account !!\")\r\n      );\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n","import React, { useState,useEffect } from 'react';\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport Loader from '../../utils/loader';\r\nimport './form.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TextField , Button } from '@material-ui/core';\r\nimport { errorHelper } from '../../utils/tools';\r\nimport { userRegister,userSignIn } from '../../store/actions/user_actions';\r\nconst AuthForm = (props) => {\r\n    const notifications = useSelector(state=> state.notifications);\r\n    const [loading,setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues:{ email:'',password:'' },\r\n        validationSchema:Yup.object({\r\n            email:Yup.string()\r\n            .required('Sorry the email is required')\r\n            .email('This is an invalid email'),\r\n            password:Yup.string()\r\n            .required('Sorry the password is required')\r\n        }),\r\n        onSubmit:( values)=>{\r\n            setLoading(true);\r\n            handleSubmit(values)\r\n        }\r\n    })\r\n\r\n    const handleSubmit = values => {\r\n        if(props.formType){\r\n            dispatch(userRegister(values))\r\n        }else{\r\n            dispatch(userSignIn(values))\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(notifications && notifications.success){\r\n            props.history.push('/dashboard')\r\n        } else{\r\n            setLoading(false);\r\n        }\r\n    },[notifications,props.history])\r\n\r\n\r\n\r\n    return(\r\n        <>  \r\n            <div className=\"auth_container\">\r\n\r\n            { loading ?\r\n                <Loader/>\r\n                :\r\n                <form className=\"mt-3\" onSubmit={formik.handleSubmit}>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <TextField\r\n                            style={{width:'100%'}}\r\n                            name=\"email\"\r\n                            label=\"Enter your email\"\r\n                            variant=\"outlined\"  \r\n                            {...formik.getFieldProps('email')}\r\n                            {...errorHelper(formik,'email')}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <TextField\r\n                            style={{width:'100%'}}\r\n                            name=\"password\"\r\n                            label=\"Enter your password\"\r\n                            variant=\"outlined\"  \r\n                            type=\"password\"\r\n                            {...formik.getFieldProps('password')}\r\n                            {...errorHelper(formik,'password')}\r\n\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        size=\"small\"\r\n                    >\r\n                        { props.formType ? 'Register':'Login'}\r\n                    </Button>\r\n\r\n                </form>    \r\n            }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst PreventSignInRoute = (props) => {\r\n    const users = useSelector(state => state.users);\r\n\r\n    return(\r\n        <>\r\n            { users.auth ?\r\n                <Redirect to=\"/dashboard\"/>\r\n            :\r\n                props.children\r\n            }\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PreventSignInRoute;","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport AuthForm from './authForm';\r\nimport PreventSignInRoute from '../../hoc/preventSignInRoute';\r\nimport './register_login.css'\r\n\r\nconst RegisterLogin = (props) => {\r\n    const [formType, setFormType] = useState(false);\r\n\r\n\r\n    const toogleFormType = () => {\r\n        setFormType(!formType);\r\n    }\r\n\r\n\r\n    return(\r\n        <PreventSignInRoute >\r\n        <div className=\"page_wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"register_login_container\">\r\n                    <div className=\"left\">\r\n                        { formType ?\r\n                            <>\r\n                                <h1>New customers</h1>\r\n                                <p>Please Enter Email and password. Then verify your account via the link you recieve in your email</p>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <h1>Welcome back</h1>\r\n                                <p>Check the amount of stock available by logging in</p>\r\n                            </>\r\n                        }\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            size=\"small\"\r\n                            onClick={ ()=> toogleFormType() }\r\n                        >\r\n                            { formType ? \"Already registered ?\" : \"Need to register\" }\r\n                        </Button>\r\n\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <h2>{formType ? 'Register':'Sign in'}</h2>\r\n                        <AuthForm\r\n                            formType={formType}\r\n                            {...props}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </PreventSignInRoute>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterLogin;","import React, { useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { showToast } from '../utils/tools'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { clearNotification } from '../store/actions/index';\r\n\r\n\r\nconst MainLayout = (props) => {\r\n    const notifications = useSelector(state => state.notifications);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(()=>{\r\n        if(notifications && notifications.error){\r\n            const msg = notifications.msg ? notifications.msg : 'Error';\r\n            showToast('ERROR',msg);\r\n            dispatch(clearNotification());\r\n        }\r\n        if(notifications && notifications.success){\r\n            const msg = notifications.msg ? notifications.msg : 'Good job !!';\r\n            showToast('SUCCESS',msg);\r\n            dispatch(clearNotification());\r\n        }\r\n\r\n    },[notifications,dispatch])\r\n\r\n\r\n    return(\r\n        <>\r\n            {props.children}\r\n            <ToastContainer/>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default MainLayout;","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CustomerDashboard = ({\r\n  customerCode,\r\n  customerName,\r\n  phoneNumber,\r\n  email,\r\n  id,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"customerContainer\">\r\n        <Table striped bordered hover>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{ width: \"20%\" }}>{customerCode}</td>\r\n\r\n              <td style={{ width: \"40%\" }}>\r\n                {\" \"}\r\n                <Link to={`/dashboard/admin/customers/${id}`}>\r\n                  {customerName}\r\n                </Link>\r\n              </td>\r\n\r\n              <td style={{ width: \"40%\" }}>{phoneNumber}</td>\r\n              {/* <td style={{ width: \"35%\" }}>{email}</td> */}\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboard;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({placeholder,handleChange}) => {\r\n    return (\r\n        <input type='search'\r\n        className=\"searchBox\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n      );\r\n}\r\n \r\nexport default SearchBox","import React, { useEffect, useState } from \"react\";\r\nimport DashboardLayout from \"../../hoc/dashboardLayout\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomerDashboard from \"./customerDashboard\";\r\nimport SearchBox from \"./searchbox\";\r\n\r\nimport hmacSHA256 from \"crypto-js/hmac-sha256\";\r\nimport Base64 from \"crypto-js/enc-base64\";\r\n\r\nconst Customers = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n  const auth_id = \"f6500cfe-5991-422f-aa8d-fd18a814e47b\";\r\n  const auth_key =\r\n    \"VlVnsmU3Lq2yDcnSMGAtn6bhrJ4sowsG9BOn5yIFo5R0Lsy7jmGLw5YKcuTvWGwrFtHIBdHCUoc1ClWGsQ==\";\r\n\r\n  const handlePageClick = ({ selected }) => {\r\n    setCurrentPage(selected + 1);\r\n  };\r\n  useEffect(() => {\r\n    const getAuthHeader2 = () => {\r\n      const hmacSignature = Base64.stringify(\r\n        hmacSHA256(`pageSize=15&&customer=${searchField}`, auth_key)\r\n      );\r\n      return {\r\n        headers: {\r\n          //'Authorization':`Bearer ${getTokenCookie()}`,\r\n          \"content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"api-auth-id\": auth_id,\r\n          \"api-auth-signature\": hmacSignature,\r\n          \"client-type\": \"linzi\",\r\n        },\r\n      };\r\n    };\r\n    const fetchList = async () => {\r\n      const result = await axios.get(\r\n        `https://api.unleashedsoftware.com/Customers/${currentPage}?pageSize=${15}&&customer=${searchField}`,\r\n        getAuthHeader2()\r\n      );\r\n\r\n      setCustomers(result.data);\r\n\r\n      setLoading(false);\r\n    };\r\n    fetchList();\r\n  }, [currentPage, searchField]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <h1>LJ Customers</h1>\r\n      <div className=\"searchBox\">\r\n      <SearchBox\r\n        placeholder=\"search Customer by Name or customer code\"\r\n        handleChange={(e) => setSearchField(e.target.value)}\r\n      />\r\n      </div>\r\n      <div>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n        <div className=\"customerWrapper\">\r\n          <div className=\"customerContainer\">\r\n            <div >\r\n              <Table striped bordered hover variant=\"dark\" className=\"customerTable\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ width: \"20%\" }}>Code</th>\r\n                    <th style={{ width: \"40%\" }}>Customer Name</th>\r\n                    <th style={{ width: \"40%\" }}> Phone Number</th>\r\n                   \r\n                  </tr>\r\n                </thead>\r\n              </Table>\r\n              {customers.Items.map((data, i) => {\r\n                return (\r\n               \r\n                  <div key={i}>\r\n                    <CustomerDashboard\r\n                      customerCode={data.CustomerCode}\r\n                      customerName={data.CustomerName}\r\n                      phoneNumber={data.PhoneNumber}\r\n                      id={data.Guid}\r\n                     \r\n                    />\r\n                  </div>\r\n              \r\n                );\r\n              })}\r\n              <div className=\"paginationContainer\">\r\n               <ReactPaginate\r\n                previousLabel={\"Prev\"}\r\n                onPageChange={handlePageClick}\r\n                pageCount={customers.Pagination.NumberOfPages}\r\n                nextLabel={\"Next\"}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttns\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledClassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n              /> \r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","import React, {useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { errorHelper } from '../../../utils/tools';\r\nimport Loader from '../../../utils/loader';\r\nimport { userChangeEmail } from '../../../store/actions/user_actions'\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Stepper,\r\n    Step,\r\n    StepLabel\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst EmailStepper = ({users}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailModal, setEmailModal] = useState(false);\r\n    const notifications = useSelector(state=> state.notifications);\r\n    const dispatch = useDispatch();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const steps = ['Enter old email','Enter new email','Are you sure ?']\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize:true,\r\n        initialValues: { email:'', newemail:''},\r\n        validationSchema:Yup.object({\r\n            email:Yup.string()\r\n            .required('This is required')\r\n            .email('This is not a valid email')\r\n            .test('match','Please check your email',(email)=>{\r\n                return email === users.data.email\r\n            }),\r\n            newemail:Yup.string()\r\n            .required('This is required')\r\n            .email('This is not a valid email')\r\n            .test('match','Please check your email',(newemail)=>{\r\n                return newemail !== users.data.email\r\n            })\r\n        }),\r\n        onSubmit:(values)=>{\r\n            setLoading(true);\r\n            dispatch(userChangeEmail(values));\r\n        }\r\n    });\r\n\r\n\r\n    const closeModal = () => setEmailModal(false);\r\n    const openModal = () => setEmailModal(true)\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep)=> prevActiveStep + 1 )\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep)=> prevActiveStep - 1 )\r\n    }\r\n\r\n\r\n    const nextBtn = () => (\r\n        <Button className=\"mt-3\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n            Next\r\n        </Button>\r\n    )\r\n\r\n\r\n    const backBtn = () => (\r\n        <Button className=\"mt-3 ml-2\" variant=\"contained\" onClick={handleBack}>\r\n            Back\r\n        </Button>\r\n    )\r\n\r\n    useEffect(()=>{\r\n        if( notifications && notifications.success){\r\n            closeModal();\r\n        }\r\n        setLoading(false);\r\n    },[notifications])\r\n    return(\r\n        <>\r\n            <form className=\"mt-3 article_form\" style={{maxWidth:'250px'}}>\r\n                <div className=\"form-group\">\r\n                <TextField\r\n                        style={{ width:'100%',marginBottom:'10px',marginTop:'30px'}}\r\n                        name=\"emailstatic\"\r\n                        variant=\"outlined\"\r\n                        value={users.data.email}\r\n                        disabled\r\n                    />\r\n\r\n                </div>\r\n                <Button\r\n                    className=\"mb-3\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={openModal}\r\n                >\r\n                    Edit email\r\n                </Button>\r\n            </form>\r\n\r\n            <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update your email</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Stepper activeStep={activeStep}>\r\n                        { steps.map((label, index)=> {\r\n                            return(\r\n                                <Step key={label}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            )\r\n                        })}\r\n                    </Stepper>\r\n                    <form className=\"mt-3 stepper_form\" onSubmit={formik.handleSubmit}>\r\n                    { activeStep === 0 ?\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                style={{ width:'100%'}}\r\n                                name=\"email\"\r\n                                label=\"Enter your current email\"\r\n                                variant=\"outlined\"\r\n                                {...formik.getFieldProps('email')}\r\n                                {...errorHelper(formik,'email')}\r\n                            />\r\n                             {  formik.values.email && !formik.errors.email ?\r\n                                nextBtn()\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    :null}\r\n\r\n                    { activeStep === 1 ?\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                style={{ width:'100%'}}\r\n                                name=\"newemail\"\r\n                                label=\"Enter your new email\"\r\n                                variant=\"outlined\"\r\n                                {...formik.getFieldProps('newemail')}\r\n                                {...errorHelper(formik,'newemail')}\r\n                            />\r\n                            {  formik.values.newemail && !formik.errors.newemail ?\r\n                                nextBtn()\r\n                                :null\r\n                            }\r\n                            { backBtn()}\r\n                        </div>\r\n                    :null}\r\n                    { activeStep === 2 ?\r\n                        <div className=\"form-group\">\r\n                            { loading ?\r\n                                <Loader/>\r\n                                :\r\n                                <>\r\n                                    <Button\r\n                                        className=\"mt-3\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={formik.submitForm}\r\n                                    >\r\n                                        Edit email\r\n                                    </Button>\r\n                                    {backBtn()}\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    :null}\r\n                    </form>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default EmailStepper;","import React from 'react';\r\nimport DashboardLayout from '../../../hoc/dashboardLayout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { errorHelper } from '../../../utils/tools';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { TextField,Button } from '@material-ui/core';\r\nimport { userUpdateProfile } from '../../../store/actions/user_actions';\r\nimport EmailStepper from './emailInfo';\r\n\r\n\r\nconst UserInfo = ({users}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize:true,\r\n        initialValues:{\r\n            firstName: users.data.firstName,\r\n            lastName: users.data.lastName,\r\n        },\r\n        validationSchema:Yup.object({\r\n            firstName: Yup.string()\r\n            .min(3,'3 char min')\r\n            .max(30,'30 char max')\r\n            .required('Sorry, you need the firstname'),\r\n            lastName:Yup.string()\r\n            .min(3,'3 char min')\r\n            .max(30,'30 char max')\r\n            .required('Sorry, you need the lastname'),\r\n        }),\r\n        onSubmit:(values)=>{\r\n            dispatch(userUpdateProfile(values))\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return(\r\n        <DashboardLayout title=\"User information\">\r\n            <form className=\"mt-3 article_form\" style={{maxWidth:'250px'}}\r\n                onSubmit={formik.handleSubmit}\r\n            > \r\n                <div className=\"form-group\">\r\n                    <TextField\r\n                        style={{ width:'100%',marginBottom:'10px'}}\r\n                        name=\"firstName\"\r\n                        label=\"Enter your firstname\"\r\n                        variant=\"outlined\"\r\n                        {...formik.getFieldProps('firstName')}\r\n                        {...errorHelper(formik,'firstName')}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <TextField\r\n                        style={{ width:'100%',marginBottom:'10px'}}\r\n                        name=\"lastName\"\r\n                        label=\"Enter your lastname\"\r\n                        variant=\"outlined\"\r\n                        {...formik.getFieldProps('lastName')}\r\n                        {...errorHelper(formik,'lastName')}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    className=\"mb-3\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    style={{marginBottom:'10px'}}\r\n                >\r\n                    Edit profile\r\n                </Button>\r\n            </form>\r\n            <div>\r\n                <EmailStepper users={users}/>\r\n            </div>\r\n        </DashboardLayout>\r\n    )\r\n\r\n}\r\n\r\nexport default UserInfo;","import React, { useState, useEffect } from \"react\";\r\nimport DashboardLayout from \"../../hoc/dashboardLayout\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport hmacSHA256 from \"crypto-js/hmac-sha256\";\r\nimport Base64 from \"crypto-js/enc-base64\";\r\n\r\nconst CustomerById = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [notes, setNotes] = useState([]);\r\n  // const [title, setTitle] = useState(\"\");\r\n  // const [content, setContent] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    noteId: \"\",\r\n  });\r\n  const [editNote, setEditNote] = useState(false);\r\n\r\n  const auth_id = \"f6500cfe-5991-422f-aa8d-fd18a814e47b\";\r\n  const auth_key =\r\n    \"VlVnsmU3Lq2yDcnSMGAtn6bhrJ4sowsG9BOn5yIFo5R0Lsy7jmGLw5YKcuTvWGwrFtHIBdHCUoc1ClWGsQ==\";\r\n\r\n  // const { id } = useParams()\r\n  const id = props.match.params.id;\r\n\r\n  const getAuthHeader2 = () => {\r\n    const hmacSignature = Base64.stringify(hmacSHA256(``, auth_key));\r\n    return {\r\n      headers: {\r\n        //'Authorization':`Bearer ${getTokenCookie()}`,\r\n        \"content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        \"api-auth-id\": auth_id,\r\n        \"api-auth-signature\": hmacSignature,\r\n        \"client-type\": \"linzi\",\r\n      },\r\n    };\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  useEffect(() => {\r\n    const fetchCustomer = async () => {\r\n      const result = await axios.get(\r\n        `https://api.unleashedsoftware.com/Customers/${id}`,\r\n        getAuthHeader2()\r\n      );\r\n      setCustomers(result.data);\r\n\r\n      setLoading(false);\r\n    };\r\n    fetchCustomer();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const fetchCustomerNotes = async () => {\r\n      const result = await axios.get(`/apiapi/notes/${id}`);\r\n      setNotes(result.data);\r\n    };\r\n    fetchCustomerNotes();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { title, content, noteId } = formData;\r\n    try {\r\n      if (!editNote) {\r\n        const note = await axios.post(\r\n          \"/apiapi/notes\",\r\n          {\r\n            title,\r\n            content,\r\n            customerId: id,\r\n          },\r\n          getAuthHeader2()\r\n        );\r\n        setNotes([note.data, ...notes]);\r\n        setFormData({ ...formData, title, content });\r\n      } else {\r\n        const note = await axios.patch(\r\n          `/apiapi/notes/${noteId}`,\r\n          {\r\n            title,\r\n            content,\r\n          },\r\n          getAuthHeader2()\r\n        );\r\n\r\n        if (note) {\r\n          const { title, content, _id } = note.data;\r\n          const updatedRes = {\r\n            title,\r\n            content,\r\n          };\r\n\r\n          // setNotes([note.data, ...notes]);\r\n          const updated = notes.map((i) => (i._id === _id ? updatedRes : i));\r\n          setNotes(updated);\r\n          setFormData({ ...formData, title: \"\", content: \"\" });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(\"an error occurred==>>\", err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = ({ title, content, _id }) => {\r\n    // setNoteId(_id)\r\n    setEditNote(true);\r\n    // setTitle(title);\r\n    // setContent(content);\r\n\r\n    setFormData({\r\n      title,\r\n      content,\r\n      noteId: _id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DashboardLayout>\r\n        <div>\r\n          <div>\r\n            <h3>{customers.CustomerName}</h3>\r\n            <p>Code : {customers.CustomerCode}</p>\r\n            <p>\r\n              Contact Name:{\" \"}\r\n              {customers.ContactFirstName + \" \" + customers.ContactLastName}\r\n            </p>\r\n            <p>OfficePhone: {customers.PhoneNumber}</p>\r\n            <p>\r\n              Mobile:{\" \"}\r\n              {customers.MobileNumber === null ? \"nil\" : customers.MobileNumber}\r\n            </p>\r\n            <p>Email: {customers.Email}</p>\r\n            <p>Website: {customers.Website}</p>\r\n          </div>\r\n          <div>\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  <h3>{customers.Addresses[0].AddressType} Address</h3>\r\n                  <p> {customers.Addresses[0].AddressName}</p>\r\n                  <p> {customers.Addresses[0].StreetAddress}</p>\r\n                  <p> {customers.Addresses[0].StreetAddress2}</p>\r\n                  <p> {customers.Addresses[0].City}</p>\r\n                  <p> {customers.Addresses[0].Country}</p>\r\n                  <p> {customers.Addresses[0].PostalCode}</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {notes.map((note, i) => (\r\n          <div key={i}>\r\n            <div className=\"notesContainer\">\r\n              <h3>{note.title}</h3>\r\n              <p>{note.content}</p>\r\n              <p>Last Edited on </p>\r\n\r\n              <button onClick={() => handleEdit(note)}>Edit</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        <form onSubmit={(e) => handleSubmit(e)} className=\"customerNotesForm\">\r\n          Title:{\" \"}\r\n          <input value={formData.title} onChange={handleChange} name=\"title\" />{\" \"}\r\n          <br />\r\n          Content:{\" \"}\r\n          <textarea\r\n            value={formData.content}\r\n            onChange={handleChange}\r\n            name=\"content\"\r\n            style={{ height: \"500px\" }}\r\n          />\r\n          {editNote ? <button>Edit Note</button> : <button>Add Note</button>}\r\n        </form>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerById;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const formValues = {\r\n  customerName: \"\",\r\n  customerContactInward: \"\",\r\n  customerContactOutward: \"\",\r\n  followUp1: \"\",\r\n  followUp2: \"\",\r\n  customerNotes: \"wowowowoow\",\r\n};\r\n\r\nexport const getValuesToEdit = (pipeline) => {\r\n  return{\r\n    customerName: pipeline.customerName,\r\n    customerContactInward: pipeline.customerContactInward,\r\n    customerContactOutward: pipeline.customerContactOutward,\r\n    followUp1: pipeline.followUp1,\r\n    followUp2: pipeline.followUp2,\r\n    customerNotes: pipeline.customerNotes,\r\n  }\r\n}\r\n\r\nexport const validation = () =>\r\n  Yup.object({\r\n    customerName: Yup.string().required(\"Sorry, the Customer Name is required\"),\r\n    customerContactInward: Yup.string().required(\r\n      \"Sorry, the customer contact in ward is required\"\r\n    ),\r\n    customerContactOutward: Yup.string(),\r\n    followUp1: Yup.string(),\r\n    followUp2: Yup.string(),\r\n    customerNotes: Yup.string().required(\r\n      \"Sorry, the Customer Notes is required\"\r\n    ),\r\n  });\r\n","import * as actions from \"./index\";\r\nimport axios from \"axios\";\r\n\r\nimport { getAuthHeader } from \"../../utils/tools\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nexport const pipelineByPaginate = (args) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const pipeline = await axios.post(`/apiapi/pipeline/paginate/all`, args);\r\n      dispatch(actions.pipelineByPaginate(pipeline.data));\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const productRemove = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.delete(`/apiapi/pipeline/pipelines/${id}`, getAuthHeader());\r\n      dispatch(actions.productRemove());\r\n      dispatch(actions.successGlobal());\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const pipelineAdd = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const pipeline = await axios.post(\r\n        `/apiapi/pipeline/`,\r\n        data,\r\n        getAuthHeader()\r\n      );\r\n      dispatch(actions.pipelineAdd(pipeline.data));\r\n      dispatch(actions.successGlobal());\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPipelineById = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const pipeline = await axios.get(`/apiapi/pipeline/pipelines/${id}`);\r\n      dispatch(actions.getPipelineByID(pipeline.data));\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const pipelineEdit = (values, id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.patch(\r\n        `/apiapi/pipeline/pipelines/${id}`,\r\n        values,\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(actions.successGlobal(\"Update done !!\"));\r\n    } catch (error) {\r\n      dispatch(actions.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DashboardLayout from \"../../../hoc/dashboardLayout\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { errorHelper } from \"../../../utils/tools\";\r\nimport Loader from \"../../../utils/loader\";\r\nimport { validation } from \"./formValues\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { pipelineAdd } from \"../../../store/actions/pipeline.action\";\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Divider,\r\n\r\n} from \"@material-ui/core\";\r\n\r\nconst AddPipeline = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      customerName: \"\",\r\n      customerContactInward: \"\",\r\n      customerContactOutward: \"\",\r\n      followUp1: \"\",\r\n      followUp2: \"\",\r\n      customerNotes: \"\",\r\n    },\r\n    validationSchema: validation,\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (values) => {\r\n    setLoading(true);\r\n    dispatch(pipelineAdd(values));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (notifications && notifications.success) {\r\n      props.history.push(\"/dashboard/admin/admin_pipeline\");\r\n    }\r\n    if (notifications && notifications.error) {\r\n      setLoading(false);\r\n    }\r\n  }, [notifications, props.history]);\r\n  return (\r\n    <DashboardLayout title=\"Add pipeline\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <form className=\"mt-3 article_form\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerName\"\r\n                label=\"Enter a Customer Name\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerName\")}\r\n                {...errorHelper(formik, \"customerName\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerContactInward\"\r\n                label=\"Enter customer Contact Inward\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerContactInward\")}\r\n                {...errorHelper(formik, \"customerContactInward\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerContactOutward\"\r\n                label=\"Enter the customer Contact Outward\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerContactOutward\")}\r\n                {...errorHelper(formik, \"customerContactOutward\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"followUp1\"\r\n                label=\"Enter the followUp1\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"followUp1\")}\r\n                {...errorHelper(formik, \"followUp1\")}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </div>\r\n            <Divider className=\"mt-3 mb-3\" />\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"followUp2\"\r\n                label=\"Enter the followUp 2\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"followUp2\")}\r\n                {...errorHelper(formik, \"followUp2\")}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <Divider className=\"mt-3 mb-3\" />\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerNotes\"\r\n                label=\"Enter the customer Notes\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerNotes\")}\r\n                {...errorHelper(formik, \"customerNotes\")}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <Divider className=\"mt-3 mb-3\" />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Add Pipeline\r\n            </Button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default AddPipeline;\r\n","import React from \"react\";\r\nimport { Table, Pagination, Modal, Button } from \"react-bootstrap\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport Moment from \"react-moment\";\r\nimport Loading from \"../../../utils/loader\";\r\n\r\nconst PipelineTable = ({\r\n  pipe,\r\n  prev,\r\n  next,\r\n  gotoEdit,\r\n  removeModal,\r\n  handleClose,\r\n  handleModal,\r\n  handleRemove,\r\n}) => {\r\n  const goToPrevPage = (page) => {\r\n    prev(page);\r\n  };\r\n\r\n  const goToNextPage = (page) => {\r\n    next(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pipe && pipe.docs ? (\r\n        <>\r\n        <div className=\"pipelineTable\">\r\n          <Table className='table' striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Created</th>\r\n                <th>CustomerName</th>\r\n                <th>customerContactInward</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pipe.docs.map((item) => (\r\n                <tr key={item._id}>\r\n                  <td>\r\n                    <Moment to={item.date}></Moment>\r\n                  </td>\r\n                  <td>{item.customerName}</td>\r\n                  <td>{item.customerContactInward}</td>\r\n                  <td\r\n                    className=\"action_btn remove_btn\"\r\n                    onClick={() => handleModal(item._id)}\r\n                  >\r\n                    Remove\r\n                  </td>\r\n                  <td\r\n                    className=\"action_btn edit_btn\"\r\n                    onClick={() => gotoEdit(item._id)}\r\n                  >\r\n                    Edit\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          </div>\r\n          <Pagination>\r\n            {pipe.hasPrevPage ? (\r\n              <>\r\n                <Pagination.Prev onClick={() => goToPrevPage(pipe.prevPage)} />\r\n                <Pagination.Item onClick={() => goToPrevPage(pipe.prevPage)}>\r\n                  {pipe.prevPage}\r\n                </Pagination.Item>\r\n              </>\r\n            ) : null}\r\n            <Pagination.Item active>{pipe.page}</Pagination.Item>\r\n            {pipe.hasNextPage ? (\r\n              <>\r\n                <Pagination.Item onClick={() => goToNextPage(pipe.nextPage)}>\r\n                  {pipe.nextPage}\r\n                </Pagination.Item>\r\n                <Pagination.Next onClick={() => goToNextPage(pipe.nextPage)} />\r\n              </>\r\n            ) : null}\r\n          </Pagination>\r\n          <hr />\r\n          <LinkContainer to=\"/dashboard/admin/add_pipeline\">\r\n            <Button variant=\"secondary\">Add product</Button>\r\n          </LinkContainer>\r\n        </>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n      <Modal show={removeModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are you really sure ?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>There is no going back.</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Oops, close this now !!\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => handleRemove()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PipelineTable;\r\n","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport DashboardLayout from \"../../../hoc/dashboardLayout\";\r\nimport PipelineTable from \"./pipelineTable\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  pipelineByPaginate,\r\n  productRemove,\r\n} from \"../../../store/actions/pipeline.action\";\r\n\r\nconst defaultValues = { keywords: \"\", page: 1 };\r\n\r\nconst AdminPipeline = (props) => {\r\n  const [removeModal, setRemoveModal] = useState(false);\r\n  const [toRemove, setToRemove] = useState(null);\r\n  const pipeline = useSelector((state) => state.pipeline);\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchValues, setSearchValues] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    defaultValues\r\n  );\r\n\r\n  // const formik = useFormik({\r\n  //   initialValues: { keywords: \"\" },\r\n  //   validationSchema: Yup.object({\r\n  //     keywords: Yup.string()\r\n  //       .min(3, \"You need more than 3\")\r\n  //       .max(200, \"Your search is too long\"),\r\n  //   }),\r\n  //   onSubmit: (values, { resetForm }) => {\r\n  //     setSearchValues({ keywords: values.keywords, page: 1 });\r\n  //     resetForm();\r\n  //   },\r\n  // });\r\n\r\n  const gotoEdit = (id) => {\r\n    props.history.push(`/dashboard/admin/edit_pipeline/${id}`);\r\n  };\r\n\r\n  const gotoPage = (page) => {\r\n    setSearchValues({ page: page });\r\n  };\r\n\r\n  const handleCose = () => {\r\n    setRemoveModal(false);\r\n  };\r\n\r\n  const handleModal = (id) => {\r\n    setToRemove(id);\r\n    setRemoveModal(true);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    dispatch(productRemove(toRemove));\r\n  };\r\n\r\n  // const resetSearch = () => {\r\n  //   setSearchValues(defaultValues);\r\n  // };\r\n  useEffect(() => {\r\n    dispatch(pipelineByPaginate(searchValues));\r\n  }, [dispatch, searchValues]);\r\n\r\n  useEffect(() => {\r\n    handleCose();\r\n    setRemoveModal(null);\r\n    if (notifications && notifications.removeArticle) {\r\n      console.log(dispatch);\r\n      dispatch(pipelineByPaginate(searchValues));\r\n    }\r\n  }, [dispatch, notifications, searchValues]);\r\n  return (\r\n    <DashboardLayout title=\"Pipelines\">\r\n      <div className=\"products_table\">\r\n        {/* <div>\r\n          <form className=\"mt-3\" onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"keywords\"\r\n              label=\"Enter your search\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"keywords\")}\r\n              {...errorHelper(formik, \"keywords\")}\r\n            />\r\n          </form>\r\n          <Button onClick={() => resetSearch()}>Reset search</Button>\r\n        </div> */}\r\n        <hr />\r\n        <PipelineTable\r\n          pipe={pipeline.byPaginate}\r\n          removeModal={removeModal}\r\n          prev={(page) => gotoPage(page)}\r\n          next={(page) => gotoPage(page)}\r\n          gotoEdit={(id) => gotoEdit(id)}\r\n          handleClose={() => handleCose()}\r\n          handleModal={(id) => handleModal(id)}\r\n          handleRemove={() => handleRemove()}\r\n        />\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default AdminPipeline;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport DashboardLayout from \"../../../hoc/dashboardLayout\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { errorHelper } from \"../../../utils/tools\";\r\nimport Loader from \"../../../utils/loader\";\r\nimport { validation, formValues, getValuesToEdit } from \"./formValues\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearCurrentPipeline } from \"../../../store/actions/index\";\r\nimport {\r\n  pipelineEdit,\r\n  getPipelineById,\r\n} from \"../../../store/actions/pipeline.action\";\r\n\r\n\r\nimport { TextField, Button, Divider } from \"@material-ui/core\";\r\n\r\nconst EditPipeline = (props) => {\r\n  const [values, setValues] = useState(formValues);\r\n  const [loading, setLoading] = useState(false);\r\n  const pipeline = useSelector((state) => state.pipeline);\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: values,\r\n    validationSchema: validation,\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (values) => {\r\n    setLoading(true);\r\n    dispatch(pipelineEdit(values, props.match.params.id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (notifications) {\r\n      setLoading(false);\r\n    }\r\n  }, [notifications]);\r\n\r\n  useEffect(() => {\r\n    const param = props.match.params.id;\r\n\r\n    if (param) {\r\n      dispatch(getPipelineById(param));\r\n    }\r\n  }, [dispatch, props.match.params.id]);\r\n\r\n  useEffect(() => {\r\n    if (pipeline && pipeline.byId) {\r\n      setValues(getValuesToEdit(pipeline.byId));\r\n    }\r\n  }, [pipeline]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearCurrentPipeline());\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <DashboardLayout title=\"Add pipeline\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <form className=\"mt-3 article_form\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerName\"\r\n                label=\"Enter a Customer Name\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerName\")}\r\n                {...errorHelper(formik, \"customerName\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerContactInward\"\r\n                label=\"Enter customer Contact Inward\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerContactInward\")}\r\n                {...errorHelper(formik, \"customerContactInward\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerContactOutward\"\r\n                label=\"Enter the customer Contact Outward\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerContactOutward\")}\r\n                {...errorHelper(formik, \"customerContactOutward\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"followUp1\"\r\n                label=\"Enter the followUp1\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"followUp1\")}\r\n                {...errorHelper(formik, \"followUp1\")}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </div>\r\n            <Divider className=\"mt-3 mb-3\" />\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"followUp2\"\r\n                label=\"Enter the followUp 2\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"followUp2\")}\r\n                {...errorHelper(formik, \"followUp2\")}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <Divider className=\"mt-3 mb-3\" />\r\n\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"customerNotes\"\r\n                label=\"Enter the customer Notes\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"customerNotes\")}\r\n                {...errorHelper(formik, \"customerNotes\")}\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <Divider className=\"mt-3 mb-3\" />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Edit Pipeline\r\n            </Button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default EditPipeline;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport Loader from \"./utils/loader\";\nimport Header from \"./Components/Navigation/header\";\nimport Footer from \"./Components/Navigation/footer\";\nimport Dashboard from \"./Components/dashboard\";\nimport authGuard from \"./hoc/authGuard\";\nimport RegisterLogin from \"./Components/auth\";\nimport MainLayout from \"./hoc/mainLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userIsAuth, userSignOut } from \"./store/actions/user_actions\";\nimport Customers from \"./Components/customers\";\nimport UserInfo from \"./Components/dashboard/user/info\";\nimport CustomerById from \"./Components/customers/CustomerByID\";\nimport AddPipeline from \"./Components/dashboard/admin/add\";\nimport AdminPipeline from \"./Components/dashboard/admin/pipeline.layout\";\nimport EditPipeline from \"./Components/dashboard/admin/edit\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const users = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n\n  const signOutUser = () => {\n    dispatch(userSignOut());\n  };\n\n  useEffect(() => {\n    dispatch(userIsAuth());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (users.auth !== null) {\n      setLoading(false);\n    }\n  }, [users]);\n\n  return (\n    <BrowserRouter>\n      {loading ? (\n        <Loader full={true} />\n      ) : (\n        <>\n          <Header users={users} signOutUser={signOutUser} />\n          <MainLayout>\n            <Switch>\n              <Route\n                exact\n                path=\"/dashboard/admin/edit_pipeline/:id\"\n                component={authGuard(EditPipeline)}\n              />\n              <Route\n                exact\n                path=\"/dashboard/admin/add_pipeline\"\n                component={authGuard(AddPipeline)}\n              />\n              <Route\n                exact\n                path=\"/dashboard/admin/admin_pipeline\"\n                component={authGuard(AdminPipeline)}\n              />\n              <Route\n                exact\n                path=\"/dashboard/user/user_info\"\n                component={authGuard(UserInfo)}\n              />\n              <Route\n                exact\n                path=\"/dashboard/admin/customers\"\n                component={authGuard(Customers)}\n              />\n              <Route\n                exact\n                path=\"/dashboard/admin/customers/:id\"\n                component={authGuard(CustomerById)}\n              />\n\n              <Route exact path=\"/dashboard\" component={authGuard(Dashboard)} />\n\n              <Route exact path=\"/\" component={RegisterLogin} />\n            </Switch>\n          </MainLayout>\n          <Footer />\n        </>\n      )}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {AUTH_USER,SIGN_OUT,UPDATE_USER_PROFILE,USER_CHANGE_EMAIL} from '../types'\r\n\r\nlet DEFAULT_USER_STATE = {\r\n    data:{\r\n        _id:null,\r\n        email:null,\r\n        firstName:null,\r\n        lastName:null,\r\n        history:[],\r\n        verified:null\r\n    },\r\n    auth:null,\r\n    cart:[]\r\n}\r\n\r\nexport default function usersReducer(state=DEFAULT_USER_STATE,action){\r\n    switch(action.type){\r\n        case AUTH_USER:\r\n            return {...state, \r\n                data: {...state.data, ...action.payload.data},\r\n                auth: action.payload.auth\r\n            }\r\n            case SIGN_OUT:\r\n                return {...state, \r\n                    data: { ...DEFAULT_USER_STATE.data },\r\n                    auth:false\r\n                }\r\n            case UPDATE_USER_PROFILE:\r\n                return { ...state, data: {...action.payload }}\r\n            case USER_CHANGE_EMAIL:\r\n                return {\r\n                        ...state,\r\n                        data:{ ...state.data, email: action.payload }\r\n                    }        \r\n            default:\r\n                return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport users from \"./users.reducer\";\r\nimport notifications from \"./notifications.reducer\";\r\nimport pipeline from \"./pipeline.reducer\";\r\n\r\nconst appReducers = combineReducers({\r\n  users,\r\n  notifications,\r\n  pipeline,\r\n});\r\n\r\nexport default appReducers;\r\n","import {\r\n  ERROR_GLOBAL,\r\n  SUCCESS_GLOBAL,\r\n  CLEAR_NOTIFICATION,\r\n  REMOVE_PIPELINE,\r\n} from \"../types\";\r\n\r\nexport default function notificationsReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ERROR_GLOBAL:\r\n      return { ...state, error: true, msg: action.payload };\r\n    case SUCCESS_GLOBAL:\r\n      return { ...state, success: true, msg: action.payload };\r\n    case CLEAR_NOTIFICATION:\r\n      return {};\r\n    case REMOVE_PIPELINE:\r\n      return { ...state, removeArticle: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PIPE_PAGINATE,\r\n  ADD_PIPELINE,\r\n  GET_PIPELINE_BY_ID,\r\n  CLEAR_CURRENT_PIPELINE,\r\n} from \"../types\";\r\n\r\nexport default function pipelineReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_PIPE_PAGINATE:\r\n      return { ...state, byPaginate: action.payload };\r\n    case ADD_PIPELINE:\r\n      return { ...state, lastAdded: action.payload };\r\n    case GET_PIPELINE_BY_ID:\r\n      return { ...state, byId: action.payload };\r\n    case CLEAR_CURRENT_PIPELINE:\r\n      return { ...state, byId: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport appReducers from './reducers';\r\nconst ReduxStore = () =>{\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(\r\n        appReducers,\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n    return store;\r\n}\r\n\r\nexport default ReduxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\nimport { Provider } from 'react-redux';\nimport ReduxStore from './store';\nimport './routes.css'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ReduxStore()}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}